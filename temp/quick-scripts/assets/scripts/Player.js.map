{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","onLoad","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","sequence","audioEngine","playEffect","event","keyCode","macro","KEY","left","node","runAction","flipX","right","up","jumpAction","onDestroy","off","start","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n         // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    setJumpAction: function () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 回复单次序列\n        return cc.sequence(jumpUp, jumpDown, callback);\n    },\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.left:\n                this.accLeft = true;\n                this.node.runAction(cc.flipX(true));\n                break;\n            case cc.macro.KEY.right:\n                this.accRight = true;\n                this.node.runAction(cc.flipX(false));\n                break;\n            case cc.macro.KEY.up:\n                this.jumpAction = this.setJumpAction();\n                this.node.runAction(this.jumpAction);\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.left:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.right:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}